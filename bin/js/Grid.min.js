function Grid(i,t,s,e,h){function a(){this.opacity+=1/(timePerGrid/refreshRate),this.opacity>1&&(this.opacity=1)}function n(){if(Math.abs(this.xLineTo)<this.width){var i=s/(timePerGrid/refreshRate);switch(h){case 0:this.xLineTo+=i,this.yLineTo+=i;break;case 1:this.xLineTo+=i,this.yLineTo-=i;break;case 2:this.xLineTo-=i,this.yLineTo-=i;break;case 3:this.xLineTo-=i,this.yLineTo+=i}}else if(Math.abs(this.xLineTo)>=this.width){switch(h){case 0:this.xLineTo=this.width,this.yLineTo=this.width;break;case 1:this.xLineTo=this.width,this.yLineTo=-this.width;break;case 2:this.xLineTo=-this.width,this.yLineTo=-this.width;break;case 3:this.xLineTo=-this.width,this.yLineTo=this.width}this.animated=!0}}switch(this.orientation=h,this.xOffset=i,this.yOffset=t,this.width=s,this.value=e,this.animated=!1,this.opacity=0,this.incrementOpacity=a,this.xLineStart,this.yLineStart,h){case 0:this.xLineStart=this.xOffset,this.yLineStart=this.yOffset;break;case 1:this.xLineStart=this.xOffset,this.yLineStart=this.yOffset+this.width;break;case 2:this.xLineStart=this.xOffset+this.width,this.yLineStart=this.yOffset+this.width;break;case 3:this.xLineStart=this.xOffset+this.width,this.yLineStart=this.yOffset}this.xLineTo=0,this.yLineTo=0,this.incrementLineLength=n}function addGrid(i){var t,s=grids[i-1].value;t=2>i?0:grids[i-2].value;var e,h=parseInt(s)+parseInt(t),a=i%4;switch(a){case 0:e=maxX-minX,grids[grids.length]=new Grid(minX,maxY,e,h,a),maxY+=e;break;case 1:e=maxY-minY,grids[grids.length]=new Grid(maxX,minY,e,h,a),maxX+=e;break;case 2:e=maxX-minX,grids[grids.length]=new Grid(minX,minY-e,e,h,a),minY-=e;break;case 3:e=maxY-minY,grids[grids.length]=new Grid(minX-e,minY,e,h,a),minX-=e}}var timePerGrid=2e3;